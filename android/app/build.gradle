plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}


def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}


def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }


android {
    compileSdkVersion 34
    //ndkVersion flutter.ndkVersion
    ndkVersion "25.2.9519653"
    

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
       
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "agendadecitas.app"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode 98 // aumentar en unidades al subir a playstore
        versionName "10.06"
        multiDexEnabled true
    } 
    
    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    
    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false //<- add this line
        warning 'deprecation'
    }
   

   
}

flutter {
    source '../..'
}


dependencies {
    //notification
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    // Import the Firebase BoM
    implementation(platform("com.google.firebase:firebase-bom:32.2.0"))
    implementation("com.google.firebase:firebase-analytics-ktx")
   
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.android.support:multidex:1.0.3'
    // Stripe Android SDK
    implementation 'com.stripe:stripe-android:20.17.0'
    implementation 'com.google.android.play:integrity:1.0.2'

    // pago a traves de Google play
    implementation("com.android.billingclient:billing-ktx:7.0.0")
}